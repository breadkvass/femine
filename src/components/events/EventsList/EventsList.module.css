/* Variables */
:root {
  --card-bg: #ffffff;
  --muted: #6b7280; /* текст второстепенный */
  --border: #e6e9ef;
  --accent: #2563eb;
  --success: #16a34a;
  --danger: #ef4444;
  --radius: 10px;
}

.container {
  width: 100%;
}

.list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: grid;
  grid-template-columns: 1fr;
  gap: 16px;
}

.item {
}

.card {
  display: flex;
  gap: 16px;
  background: var(--card-bg);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 12px;
  align-items: stretch;
  transition: box-shadow .15s ease, transform .08s ease;
  cursor: pointer;
}

.card:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(37,99,235,0.12);
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 18px rgba(30,41,59,0.06);
}

.media {
  width: 160px;
  min-width: 120px;
  height: 96px;
  overflow: hidden;
  border-radius: 8px;
  flex-shrink: 0;
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.body {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
}

.title {
  margin: 0;
  font-size: 1.05rem;
  line-height: 1.2;
}

.status {
  font-size: 0.75rem;
  padding: 6px 8px;
  border-radius: 999px;
  font-weight: 600;
  text-transform: uppercase;
}

/* варианты статуса */
.upcoming { background: rgba(37,99,235,0.08); color: var(--accent); }
.ongoing { background: rgba(16,185,129,0.08); color: var(--success); }
.past { background: rgba(239,68,68,0.06); color: var(--danger); }

.when {
  margin: 0;
  color: var(--muted);
  font-size: 0.9rem;
}

.location { font-weight: 500; }

.description {
  margin: 0;
  color: #374151;
  font-size: 0.95rem;
  max-height: 3.6em; /* ~2 lines */
  overflow: hidden;
  text-overflow: ellipsis;
}

.metaRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 8px;
}

.tags { list-style: none; display:flex; gap:8px; padding:0; margin:0; }
.tag { font-size:0.8rem; color:var(--muted); background:#f3f4f6; padding:4px 8px; border-radius:999px; }

.occupancy { font-size:0.85rem; color:var(--muted); margin-right:8px }
.price { font-weight:700 }

/* Empty state */
.empty { padding: 24px; border: 1px dashed var(--border); border-radius: 8px; text-align:center }
.emptyTitle { font-weight:700; margin:0 0 6px 0 }
.emptySubtitle { margin:0; color:var(--muted) }

/* Responsive */
@media (max-width: 720px) {
  .card { flex-direction: row; gap: 12px }
  .media { width: 116px; height: 80px }
}

@media (max-width: 520px) {
  .list { gap: 12px }
  .card { flex-direction: column; align-items: stretch }
  .media { width: 100%; height: 160px }
}



/*
import React from 'react';
import EventsList, { EventItem } from './EventsList';

const sampleEvents: EventItem[] = [
  {
    id: 'ev-1',
    title: 'Conference: Frontend Days',
    description: 'Двухдневная конференция про современные подходы во фронтенде.',
    startAt: new Date(Date.now() + 1000 * 60 * 60 * 24).toISOString(),
    endAt: new Date(Date.now() + 1000 * 60 * 60 * 24 * 6).toISOString(),
    location: 'Москва, Коворкинг Центр',
    imageUrl: '',
    tags: ['frontend', 'react'],
    capacity: 120,
    attendees: 60,
    priceCents: 29900,
  },
  {
    id: 'ev-2',
    title: 'Вебинар: Тестирование компонентов',
    startAt: new Date(Date.now() - 1000 * 60 * 60).toISOString(),
    endAt: new Date(Date.now() + 1000 * 60 * 60).toISOString(),
    location: 'онлайн',
    tags: ['testing'],
    capacity: 500,
    attendees: 420,
    priceCents: 0,
  }
];

export default function Demo() {
  return <EventsList events={sampleEvents} onEventClick={(id) => console.log('open', id)} />;
}
*/

